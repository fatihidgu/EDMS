{{!-- <footer>
	<div class="container">
		<div class="row">
			<div class="col-md-12">
				<ul class="footer-follow" style="visibility: hidden;">
					<li><a href="#"><i class="fab fa-facebook-f"></i></a></li>
					<li><a href="#"><i class="fab fa-twitter"></i></a></li>
					<li><a href="#"><i class="fab fa-google-plus-g"></i></a></li>
					<li><a href="#"><i class="fab fa-instagram"></i></a></li>
					<li><a href="#"><i class="fab fa-linkedin-in"></i></a></li>
					<li><a href="#"><i class="fab fa-youtube"></i></a></li>
				</ul>
				<div class="footer-copyrights">
					<p>BY FATO&OGUZ</p>
				</div>
			</div>
		</div>
	</div>
</footer> --}}




<!-- <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script> -->
<!-- Optional JavaScript -->
<!-- jQuery first, then Popper.js, then Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script>src = "https://fontawesome.com/v4.7.0/icons"</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"></script>
<script src="/js/lightbox-plus-jquery.js"></script>
<script src="/js/owl.carousel.min.js"></script>
<script src="/js/main.js"></script>
<script>
	function SwitchButtons(buttonId) {
		var hideBtn, showBtn;
		if (buttonId == 'button1') {
			showBtn = 'button2';
			hideBtn = 'button1';


		} else {
			showBtn = 'button1';
			hideBtn = 'button2';
			//document.getElementById("workproc").disabled=ture
		}

		//I don't have your menus, so this is commented out.  just uncomment for your usage
		// document.getElementById(menuToggle).toggle(); //step 1: toggle menu

		document.getElementById(hideBtn).style.display = 'none'; //step 2 :additional feature hide button
		document.getElementById(showBtn).style.display = ''; //step 3:additional feature show button
		document.getElementById("workproc").disabled = false
		document.getElementById("organiser1").disabled = false
		document.getElementById("organiser2").disabled = false
		document.getElementById("organiser3").disabled = false

	}
</script>

<script>
	function switchChck() {

		if (document.getElementById('inlineCheckbox2').checked) {
			document.getElementById('inlineCheckbox2').checked = false
		}
		else if (!document.getElementById('inlineCheckbox1').checked) {
			document.getElementById('inlineCheckbox2').checked = true

		}

	}
</script>

<script>
	function switchChck2() {

		if (document.getElementById('inlineCheckbox4').checked) {
			document.getElementById('inlineCheckbox4').checked = false
		}
		else if (!document.getElementById('inlineCheckbox3').checked) {
			document.getElementById('inlineCheckbox4').checked = true

		}

	}
</script>

<script>
	function switchChck3() {

		if (document.getElementById('inlineCheckbox6').checked) {
			document.getElementById('inlineCheckbox6').checked = false
		}
		else if (!document.getElementById('inlineCheckbox5').checked) {
			document.getElementById('inlineCheckbox6').checked = true

		}

	}
</script>

<script>
	function switchChck4() {

		if (document.getElementById('inlineCheckbox8').checked) {
			document.getElementById('inlineCheckbox8').checked = false
		}
		else if (!document.getElementById('inlineCheckbox7').checked) {
			document.getElementById('inlineCheckbox8').checked = true

		}

	}
</script>

<script>
	function switchChck5() {

		if (document.getElementById('inlineCheckbox10').checked) {
			document.getElementById('inlineCheckbox10').checked = false
		}
		else if (!document.getElementById('inlineCheckbox9').checked) {
			document.getElementById('inlineCheckbox10').checked = true

		}

	}
</script>



<script>
	function deneme(response) {
		$.ajax({
			url: "/registeredusers/secureUsers", // the endpoint
			type: "GET", // http method
			//console.log(json.user[i]['iscommission'])
			success: function (json) {
				//response.value
				//console.log(json.user)
				for (i = 0; i < json.user.length; i++) {
					let usermap = json.user[i];

					if (response.value == usermap['email']) {
						if (usermap['isCommittee']) {
							document.getElementById('inlineCheckbox5').checked = true
							document.getElementById('inlineCheckbox6').checked = false
						}
						else {
							document.getElementById('inlineCheckbox6').checked = true
							document.getElementById('inlineCheckbox5').checked = false
						}
						if (usermap['isManager']) {
							document.getElementById('inlineCheckbox3').checked = true
							document.getElementById('inlineCheckbox4').checked = false
						}
						else {
							document.getElementById('inlineCheckbox4').checked = true
							document.getElementById('inlineCheckbox3').checked = false
						}
						if (usermap['isOrganiser']) {
							document.getElementById('inlineCheckbox1').checked = true
							document.getElementById('inlineCheckbox2').checked = false
						}
						else {
							document.getElementById('inlineCheckbox2').checked = true
							document.getElementById('inlineCheckbox1').checked = false
						}
						if (usermap['isBlocked']) {
							document.getElementById('inlineCheckbox7').checked = true
							document.getElementById('inlineCheckbox8').checked = false
						}
						else {
							document.getElementById('inlineCheckbox8').checked = true
							document.getElementById('inlineCheckbox7').checked = false
						}
					}
					if (response.value == "") {
						document.getElementById('inlineCheckbox1').checked = false
						document.getElementById('inlineCheckbox2').checked = false
						document.getElementById('inlineCheckbox3').checked = false
						document.getElementById('inlineCheckbox4').checked = false
						document.getElementById('inlineCheckbox5').checked = false
						document.getElementById('inlineCheckbox6').checked = false
						document.getElementById('inlineCheckbox7').checked = false
						document.getElementById('inlineCheckbox8').checked = false
					}
				}
			}
		});

	}
</script>

<script>
	function findOrganiser(response) {
		const sel1 = clear('organiserOptions');
		doSomething2();
		if (sel1.value == "") {
			var opt1 = document.createElement('option');
			// create text node to add to option element (opt)
			opt1.appendChild(document.createTextNode("First, Select One Mainprocess"));
			opt1.setAttribute("value", "");
			sel1.appendChild(opt1);
		}

		$.ajax({
			url: "/onchangefiles/secureOrganiser", // the endpoint
			type: "GET", // http method
			//console.log(json.user[i]['iscommission'])
			success: function (json) {

				//console.log(json.organiser)
				//
				//
				//console.log(json.mainprocesses)

				for (let i = 0; i < json.mainprocesses.length; i++) {
					let mainmap = json.mainprocesses[i];
					for (let j = 0; j < json.organiser.length; j++) {
						let organisermap = json.organiser[j];

						if (JSON.stringify(response.value) == JSON.stringify(mainmap._id) && JSON.stringify(organisermap.workUnitId._id) == JSON.stringify(mainmap.workUnitId._id)) {
							//console.log("what happened")
							// create new option element
							var opt = document.createElement('option');
							// create text node to add to option element (opt)
							opt.appendChild(document.createTextNode(organisermap.registeredUserId.email));
							// set value property of opt
							opt.setAttribute("value", organisermap._id);
							// add opt to end of select box (sel)
							sel1.appendChild(opt);
						}
					}

				}

			}
		})
		if (response.value == "") {
			closeShare();
		}
	}
	// find org bitisi
	function doSomething2() {
		if (document.getElementById('organiserOptions').value == "") {
			closeShare();
		}
	}
	function clear(id) {
		var sel1 = document.getElementById(id);
		var i, L = sel1.options.length - 1;
		for (i = L; i >= 0; i--) {
			sel1.remove(i);
		}
		return sel1
	}

</script>


<script>
	function isShared() {
		//shareworkflow
		// addworkflowform
		const cb = document.getElementById('shareworkflow');
		if (cb.checked) {
			document.getElementById('sharedDiv').style.display = '';
			document.getElementById('WorkUnitIdSelect1').required = true;
			document.getElementById('OrganiserIdSelect1').required = true;
			var sel = document.getElementById('WorkUnitIdSelect1');
			var sel1 = document.getElementById('mainProcess');
			//mainProcess


			$.ajax({
				url: "/onchangefiles/secureOrganiser", // the endpoint
				type: "GET", // http method
				//console.log(json.user[i]['iscommission'])
				success: function (json) {
					//console.log(json.organiser)
					//console.log(json.mainprocesses)
					for (let i = 0; i < json.mainprocesses.length; i++) {
						let mainmap = json.mainprocesses[i];
						//console.log(mainmap)
						//console.log("id",)
						//console.log("selected one", sel1.value)
						if ((JSON.stringify(sel1.value) == JSON.stringify(mainmap._id))) {
							//eklemeleri cikarma
							//console.log('elendi')
							//console.log("elendi", mainmap.workUnitId._id)
							//
							document.getElementById('invisibleMainId').value = mainmap.workUnitId._id
							$('#WorkUnitIdSelect1').find('[value=' + mainmap.workUnitId._id + ']').hide();
							$('#WorkUnitIdSelect2').find('[value=' + mainmap.workUnitId._id + ']').hide(); // show()
						}
					}
				}
			})
			//sel.setAttribute("required", true);
			//if son
		}


		else {
			closeShare();
		}
		// is shared metod kapanisi	
	}
	// is shared finito

	function findSomething(response) {
		document.getElementById('WorkUnitIdSelect2').required = false;
		document.getElementById('WorkUnitIdSelect2').selectedIndex = "0"
		document.getElementById('OrganiserIdSelect2').required = false;
		document.getElementById('OrganiserIdSelect2').selectedIndex = "0"
		document.getElementById('WorkUnitIdSelect2').disabled = true;
		document.getElementById('OrganiserIdSelect2').disabled = true;
		if (response.value == "" && document.getElementById("invisibleMainId2").value != "") {
			$('#WorkUnitIdSelect1').find('[value=' + document.getElementById("invisibleMainId2").value + ']').show()
		}
		if (response.value != "") {
			if (response.value != document.getElementById("invisibleMainId3").value && document.getElementById("invisibleMainId3").value != "") {
				$('#WorkUnitIdSelect2').find('[value=' + document.getElementById("invisibleMainId3").value + ']').show()
				$('#WorkUnitIdSelect1').find('[value=' + document.getElementById("invisibleMainId2").value + ']').show()
			}
			document.getElementById("invisibleMainId3").value = response.value;
			$('#WorkUnitIdSelect2').find('[value=' + response.value + ']').hide()


		}
		//console.log("i found something", response.value)
		const sel1 = clear('OrganiserIdSelect1');
		if (sel1.value == "") {
			var opt1 = document.createElement('option');
			// create text node to add to option element (opt)
			opt1.appendChild(document.createTextNode("Select One Organiser"));
			opt1.setAttribute("value", "");
			sel1.appendChild(opt1);
		}
		$.ajax({
			url: "/onchangefiles/secureOrganiser", // the endpoint
			type: "GET", // http method
			//console.log(json.user[i]['iscommission'])
			success: function (json) {

				//console.log(json.organiser)
				//
				//
				//console.log(json.mainprocesses)
				//workunits
				for (let i = 0; i < json.workunits.length; i++) {
					let workunitmap = json.workunits[i];
					for (let j = 0; j < json.organiser.length; j++) {
						let organisermap = json.organiser[j];
						if (JSON.stringify(response.value) == JSON.stringify(workunitmap._id) && JSON.stringify(organisermap.workUnitId._id) == JSON.stringify(workunitmap._id)) {
							var sel = document.getElementById('OrganiserIdSelect1');
							// create new option element
							var opt = document.createElement('option');
							// create text node to add to option element (opt)
							opt.appendChild(document.createTextNode(organisermap.registeredUserId.email));
							// set value property of opt
							opt.setAttribute("value", organisermap._id);
							// add opt to end of select box (sel)
							sel.appendChild(opt);
						}
					}

				}

			}
		})
		console.log(response.value)
	}
	// find something
	function doSomething() {
		if (document.getElementById('organiserOptions').value != "") {
			isShared();
		} else {
			closeShare();
		}
	}
	// dosmthng
	function closeShare() {

		//
		var invis = document.getElementById('invisibleMainId')
		if (invis.value != "") {
			console.log("kapandi", invis.value)
			$('#WorkUnitIdSelect1').find('[value=' + invis.value + ']').show(); // hide();
			$('#WorkUnitIdSelect2').find('[value=' + invis.value + ']').show();
		}
		var invis2 = document.getElementById('invisibleMainId2')
		if (invis2.value != "") {
			//console.log("kapandi", invis.value)
			$('#WorkUnitIdSelect2').find('[value=' + invis2.value + ']').show(); // hide();
			$('#WorkUnitIdSelect1').find('[value=' + invis2.value + ']').show();
			$('#WorkUnitIdSelect2').find('[value=' + document.getElementById('WorkUnitIdSelect1').value + ']').show();
		}
		document.getElementById('shareworkflow').checked = false;
		document.getElementById('sharedDiv').style.display = 'none';
		document.getElementById('WorkUnitIdSelect1').required = false;
		document.getElementById('WorkUnitIdSelect1').selectedIndex = "0"
		document.getElementById('OrganiserIdSelect1').required = false;
		document.getElementById('OrganiserIdSelect1').selectedIndex = "0"
		document.getElementById('WorkUnitIdSelect2').required = false;
		document.getElementById('WorkUnitIdSelect2').selectedIndex = "0"
		document.getElementById('OrganiserIdSelect2').required = false;
		document.getElementById('OrganiserIdSelect2').selectedIndex = "0"
		// organiserleri temizle
		const sel1 = clear('OrganiserIdSelect1');
		var opt1 = document.createElement('option');
		opt1.appendChild(document.createTextNode("Select One Organiser"));
		opt1.setAttribute("value", "");
		sel1.appendChild(opt1);
		const sel2 = clear('OrganiserIdSelect2');
		var opt2 = document.createElement('option');
		opt2.appendChild(document.createTextNode("Select One Organiser"));
		opt2.setAttribute("value", "");
		sel2.appendChild(opt2);
		document.getElementById('invisibleMainId').value = "";
		document.getElementById('invisibleMainId2').value = "";
		document.getElementById("invisibleMainId3").value = "";
		document.getElementById('OrganiserIdSelect2').disabled = true;
		document.getElementById('WorkUnitIdSelect2').disabled = true;
	}
	//clsoe share

	function bosdeneme(response) {
		if (response.value == "") {
			// disable 2nd workunit
			document.getElementById("WorkUnitIdSelect2").selectedIndex = "0";
			document.getElementById("WorkUnitIdSelect2").required = false;
			document.getElementById("WorkUnitIdSelect2").disabled = true;
			document.getElementById("OrganiserIdSelect2").disabled = true;
			// clear 2nd organisers
			const sel1 = clear('OrganiserIdSelect2');
			if (sel1.value == "") {
				var opt1 = document.createElement('option');
				// create text node to add to option element (opt)
				opt1.appendChild(document.createTextNode("Select One Organiser"));
				opt1.setAttribute("value", "");
				sel1.appendChild(opt1);
			}
			if (document.getElementById("invisibleMainId2").value != "") {
				$('#WorkUnitIdSelect1').find('[value=' + document.getElementById("invisibleMainId2").value + ']').show();
			}
		}
		else {
			document.getElementById("WorkUnitIdSelect2").disabled = false;

		}
	}
	// bos deneme
	function bosdeneme3(response) {
		if (response.value != document.getElementById("invisibleMainId2").value && document.getElementById("invisibleMainId2").value != "") {
			$('#WorkUnitIdSelect1').find('[value=' + document.getElementById("invisibleMainId2").value + ']').show();
		}
		if (response.value == "") {
			// disable 2nd workunit
			document.getElementById("OrganiserIdSelect2").required = false;
			document.getElementById("OrganiserIdSelect2").disabled = true;
			document.getElementById("WorkUnitIdSelect2").required = false;
		}
		else {
			$('#WorkUnitIdSelect1').find('[value=' + response.value + ']').hide()
			document.getElementById("invisibleMainId2").value = response.value;
			document.getElementById("OrganiserIdSelect2").disabled = false;
			document.getElementById("OrganiserIdSelect2").required = true;
			///
			const sel1 = clear('OrganiserIdSelect2');
			if (sel1.value == "") {
				var opt1 = document.createElement('option');
				// create text node to add to option element (opt)
				opt1.appendChild(document.createTextNode("Select One Organiser"));
				opt1.setAttribute("value", "");
				sel1.appendChild(opt1);
			}
			$.ajax({
				url: "/onchangefiles/secureOrganiser", // the endpoint
				type: "GET", // http method
				//console.log(json.user[i]['iscommission'])
				success: function (json) {

					//console.log(json.organiser)
					//
					//
					//console.log(json.mainprocesses)
					//workunits
					for (let i = 0; i < json.workunits.length; i++) {
						let workunitmap = json.workunits[i];
						for (let j = 0; j < json.organiser.length; j++) {
							let organisermap = json.organiser[j];
							if (JSON.stringify(response.value) == JSON.stringify(workunitmap._id) && JSON.stringify(organisermap.workUnitId._id) == JSON.stringify(workunitmap._id)) {
								var sel = document.getElementById('OrganiserIdSelect2');
								// create new option element
								var opt = document.createElement('option');
								// create text node to add to option element (opt)
								opt.appendChild(document.createTextNode(organisermap.registeredUserId.email));
								// set value property of opt
								opt.setAttribute("value", organisermap._id);
								// add opt to end of select box (sel)
								sel.appendChild(opt);
							}
						}

					}

				}
			})


		}
	}

</script>

{{!--
<script>
	Swal.fire({
		title: 'Are you sure?',
		text: "You won't be able to revert this!",
		icon: 'warning',
		showCancelButton: true,
		confirmButtonColor: '#3085d6',
		cancelButtonColor: '#d33',
		confirmButtonText: 'Yes, delete it!'
	}).then((result) => {
		if (result.isConfirmed) {
			Swal.fire(
				'Deleted!',
				'Your file has been deleted.',
				'success'
			)
		}
	})
</script> --}}


{{!--
<script>
	function pop() {
		console.log("işte geldi özelhareket")
		alert("işte geldim")
		const Toast = Swal.mixin({
			toast: true,
			position: 'bottom-start',
			showConfirmButton: false,
			timer: 3500
		});
		Toast.fire({
			icon: 'success',
			title: "kendin bişi"
		})
	};
</script> --}}

<script>


	function pop() {
		if (document.getElementById('selectmail').value == 'notselectedemail') {
			Swal.fire('You need to select an E-mail', '', 'error')
		}
		else {
			Swal.fire({
				title: 'Do you want to save the changes?',
				showDenyButton: true,
				confirmButtonText: `Save`,
				denyButtonText: `Don't save`,
			}).then((result) => {

				/* Read more about isConfirmed, isDenied below */
				if (result.isConfirmed) {
					let form = document.getElementById("rolgonderme")
					$.ajax({
						type: "POST",
						url: "/registeredusers/roles",
						data: $(form).serialize(),
						success: function () {
							Swal.fire({
								title: 'Saved!',
								text: '',
								icon: 'success'
							}).then((result) => {
								// Reload the Page
								window.location.reload();
							});
						}
					});
				} else if (result.isDenied) {
					Swal.fire('Changes are not saved', '', 'info')
				}
			})
		}

	}
</script>

<script>
	function addTableMainProcess() {
		var bool = false;
		let str = JSON.stringify(document.getElementById('workprocessid').value)
		$('#workprocesstable tr').each(function () {
			var $tds = $(this).find('td');
			if ($tds.length != 0) {
				var $currText = $tds.eq(0).text();
				var str2 = $("#workunitid option:selected").text();
				if (JSON.stringify(document.getElementById('workprocessid').value + "-" + str2.split("-")[1]) == JSON.stringify($currText)) {
					bool = true
				}
			}
		});
		if (document.getElementById('workprocessid').value === "" || document.getElementById('workunitid').value === "" || str.charAt(1) == " " || bool) {
			Swal.fire('Check the Main Process Name. You cant start with space. Mainprocess Name and Related Work Unit should be unique(Main Process Name, Related Work Unit cant be null!).', '', 'error')

		}
		else {
			var table = document.getElementById('workprocesstable');
			var tableBody = document.createElement('tbody');
			table.appendChild(tableBody);
			var tr = document.createElement('tr');
			tableBody.appendChild(tr);
			var td = document.createElement('td');
			var td1 = document.createElement('td');
			var td2 = document.createElement('td');
			var str1 = $("#workunitid option:selected").text();

			td.appendChild(document.createTextNode(document.getElementById('workprocessid').value + "-" + str1.split("-")[1]));
			td2.appendChild(document.createTextNode("Onchange"));
			tr.appendChild(td);
			tr.appendChild(td1);
			tr.appendChild(td2);

			//inputs


			var form = document.getElementById('workform');
			//id="workform"
			// Create an input element for workprocess
			var work = document.createElement("input");
			work.setAttribute("type", "text");
			work.setAttribute("readonly", true);
			work.setAttribute("name", "workprocess");
			work.setAttribute("value", document.getElementById('workprocessid').value);
			work.style.display = 'none';

			//workunitid
			var workid = document.createElement("input");
			workid.setAttribute("type", "text");
			workid.setAttribute("readonly", true);
			workid.setAttribute("name", "workunitid");
			workid.setAttribute("value", document.getElementById('workunitid').value);
			workid.style.display = 'none';
			form.append(workid);
			// Append the email_ID input to the form
			form.append(work);
			// Append the password to the form

			document.getElementById('workprocessid').value = ""
			document.getElementById('workunitid').selectedIndex = 0
		}
	}
</script>

<script>
	function addTableWorkflowFileType() {
		//id="workflowfilecodeid"
		//id="workflowfilenameid"

		let code = JSON.stringify(document.getElementById('workflowfilecodeid').value)
		let file = JSON.stringify(document.getElementById('workflowfilenameid').value)
		if (document.getElementById('workflowfilenameid').value === "" || file.charAt(1) == " " ||
			document.getElementById('workflowfilecodeid').value === "" || code.charAt(1) == " ") {
			Swal.fire('Check the Workflow File Type. You cant start with space. Workflow File Type and File Type Code cant be null!', '', 'error')

		}
		else {
			var table = document.getElementById('workflowfiletable');
			var tableBody = document.createElement('tbody');
			table.appendChild(tableBody);
			var tr = document.createElement('tr');
			tableBody.appendChild(tr);
			var td = document.createElement('td');
			var td1 = document.createElement('td');
			var td2 = document.createElement('td');
			td.appendChild(document.createTextNode(document.getElementById('workflowfilenameid').value));
			td1.appendChild(document.createTextNode(document.getElementById('workflowfilecodeid').value));
			td2.appendChild(document.createTextNode("Onchange"));
			tr.appendChild(td);
			tr.appendChild(td1);
			tr.appendChild(td2);

			//inputs


			var form = document.getElementById('workflowfileform');
			//id="workflowfilecodeid"
			//id="workflowfilenameid"


			// Create an input element for workflowfilename
			var filename = document.createElement("input");
			filename.setAttribute("type", "text");
			filename.setAttribute("readonly", true);
			filename.setAttribute("name", "workflowfilename");
			filename.setAttribute("value", document.getElementById('workflowfilenameid').value);
			filename.style.display = 'none';

			// Create an input element for workflowfilecode
			var filecode = document.createElement("input");
			filecode.setAttribute("type", "text");
			filecode.setAttribute("readonly", true);
			filecode.setAttribute("name", "workflowfilecode");
			filecode.style.display = 'none';
			filecode.setAttribute("value", document.getElementById('workflowfilecodeid').value);

			form.append(filecode);
			// Append the filecode input to the form
			form.append(filename);
			// Append the filename to the form

			//clear inputs
			document.getElementById('workflowfilenameid').value = ""
			document.getElementById('workflowfilecodeid').value = ""
		}
	}

</script>
<script>
	function wuEditBtn1f() {

		if (document.getElementById("work_unit_name_id").value == "") {
			Swal.fire('Work Unit Name can not be empty.', '', 'error')
		} else {
			var btn1 = document.getElementById("wuEditBtn1");
			var btn2 = document.getElementById("wuEditBtn2");

			btn1.style.display = "none";
			btn2.style.display = "block";
			document.getElementById("wu-edit-form").submit();
			var elements = document.getElementsByClassName("wu-edit");
			var i = 0;
			for (i = 0; i < elements.length; i = i + 1) {
				elements[i].disabled = true;
			}
		}



	}
	function wuEditBtn2f() {
		var btn1 = document.getElementById("wuEditBtn1");
		var btn2 = document.getElementById("wuEditBtn2");

		btn1.style.display = "block";
		btn2.style.display = "none";
		//document.getElementById("wu-edit-form").submit();


		var elements = document.getElementsByClassName("wu-edit");
		var i = 0;
		for (i = 0; i < elements.length; i = i + 1) {
			elements[i].disabled = false;
		}

	}




</script>
<script>
	function denemeon7(response) {
		Swal.fire({
			title: 'Do you want to save the changes?',
			showDenyButton: true,
			confirmButtonText: `Save`,
			denyButtonText: `Don't save`,
		}).then((result) => {

			/* Read more about isConfirmed, isDenied below */
			if (result.isConfirmed) {
				let form = document.getElementById("disableformid")
				$.ajax({
					type: "POST",
					url: "/workflows/disable",
					data: $(form).serialize(),
					success: function () {

						Swal.fire({
							title: 'Saved!',
							text: '',
							icon: 'success'
						}).then((result) => {
							// Reload the Page
							window.location.reload();
						});


					}
				});
			} else if (result.isDenied) {
				Swal.fire('Changes are not saved', '', 'info')
			}
		})


	}
</script>

<script>

	function changeReasonBtnClicked(changeId) {
		document.getElementById("changeReasonId").value = changeId;
	};
	function rejectReasonBtnClicked(rejectId) {
		document.getElementById("rejectReasonId").value = rejectId;
	};
</script>





<script>
function arama() {
  var input, filter, tables, tr, td, i, txtValue,j,table,td2,td3,td4;
  input = document.getElementById("scrh");
  filter = input.value.toUpperCase();
  tables = document.getElementsByClassName("myTable");
  for( j = 0; j< tables.length; j++){
  table = tables[j];
  tr = table.getElementsByTagName("tr");
  for (i = 0; i < tr.length; i++) {
    td = tr[i].getElementsByTagName("td")[0];
    td2 = tr[i].getElementsByTagName("td")[1];
    td3 = tr[i].getElementsByTagName("td")[2];
    td4 = tr[i].getElementsByTagName("td")[3];
    
    if (td) {
      txtValue = td.textContent || td.innerText;
      txtValue2 = td2.textContent || td2.innerText;
      txtValue3 = td3.textContent || td3.innerText;
      txtValue4 = td4.textContent || td4.innerText;
      if (txtValue.toUpperCase().indexOf(filter) > -1 || txtValue2.toUpperCase().indexOf(filter)>-1 || txtValue3.toUpperCase().indexOf(filter)>-1|| txtValue4.toUpperCase().indexOf(filter)>-1 ){
        tr[i].style.display = "";
      } else {
        tr[i].style.display = "none";
      }
    }       
  }}
}
</script>
<script>

function arama1() {
  var input, filter, tables, tr, td, i, txtValue,j,table,td2,td3,td4;
  input = document.getElementById("scrh1");
  filter = input.value.toUpperCase();
  tables = document.getElementsByClassName("myTable1");
  for( j = 0; j< tables.length; j++){
  table = tables[j];
  tr = table.getElementsByTagName("tr");
  for (i = 0; i < tr.length; i++) {
    td = tr[i].getElementsByTagName("td")[0];

    
    if (td) {
      txtValue = td.textContent || td.innerText;
    
      if (txtValue.toUpperCase().indexOf(filter) > -1 ){
        tr[i].style.display = "";
      } else {
        tr[i].style.display = "none";
      }
    }       
  }}
}
</script>
</body>

</html>